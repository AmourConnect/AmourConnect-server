name: .NET Core Audit and Docker Push Image

on:
  push:
    branches:
      - main
      - test_before_prod
  pull_request:
    branches:
      - main

jobs:

  audit-lib:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout librairies
      uses: actions/checkout@v4
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies and run audit in Api Server
      run: |
        dotnet restore
        dotnet list package --vulnerable

    - name: Build Api Server
      run: |
        dotnet build

    - name: Unity Test Api Server
      run: |
        dotnet test

  docker-push-image:
    runs-on: ubuntu-latest

    steps:
      - name: Docker setup
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: amourconnect
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Create .env file DataBase
        run: |
          touch DataBase/.env
          echo "${{ secrets.DATABASE_ENV_PROD }}" > DataBase/.env

      - name: Build image Database
        run: |
          cd DataBase
          docker compose -f compose.yaml up -d


      - name: Create .env file Server Api
        run: |
            touch .env
            echo "${{ secrets.SERVER_ENV_PROD }}" > .env
      
      - name: Build image Server Api and Push
        run: |
            docker compose -f compose.yaml up -d
            CONTAINER_ID=$(docker ps -q --filter "name=apiamourconnect")
            IMAGE_NAME_REPOSITORY=amourconnect/test_prod_amourconnect
            docker container commit $CONTAINER_ID $IMAGE_NAME_REPOSITORY
            docker tag $IMAGE_NAME_REPOSITORY $IMAGE_NAME_REPOSITORY:ApiAmourConnect
            docker push $IMAGE_NAME_REPOSITORY:ApiAmourConnect